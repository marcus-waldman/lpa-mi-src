% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_imputed_data.R
\name{get_imputed_data}
\alias{get_imputed_data}
\title{Obtain (multiply) imputed datasets}
\usage{
get_imputed_data(z, list_get_obs, list_get_complete, methods_list,
  data_conditions, pctmiss_vec, rep = NA, p = NA, save_it = FALSE,
  temp_wd_p_vec = NULL, ...)
}
\arguments{
\item{z}{(integer) condition identifier for the complete data (as specified by data_conditions)}

\item{list_get_obs}{(list) List obtained from the get_obs_data() function. Contains the following:
A) dfcom - (data.frame) complete data corresponding to the z-th condition number}

\item{list_get_complete}{(list) List obtained from the get_complete_data() function. Contains the following:
A) dfcom - (data.frame) complete data corresponding to the z-th condition number}

\item{methods_list}{(list) List w/ pva elements. Designates the imputation methods to try.}

\item{data_conditions}{(data.frame) simulation conditions pertaining to the complete data}

\item{pctmiss_vec}{(vector) Vector w/ pm elements. Designates percent missing simulation conditions}

\item{rep}{(integer) Replication number (defaults to 1).}

\item{p}{(integer) Processor number (defaults to 1).}

\item{save_it}{(logical) if TRUE, then it saves the data set and the following also must be specificed}

\item{temp_wd_p_vec}{(character vector). Required if save_it==TRUE.  processor-specific temporary directory}

\item{...}{Additional arguments to the imputation function}

\item{list_lcfcs_svals}{(list) Starting values for the LC-FCS proposed method.}
}
\value{
out_list - (list) with the following elements
      (A) obj_call - (mids) named mids object for imputed data each
          (i)  pm-th percent missing
          (ii) pva-th imputation method (see methods_list for details)
      (B) dffolderfiles (data.frame) with the files and folders for each of the save imputed data sets
}
\description{
Conduct (multiple) imputation on the observed data for the LPA-MI simulation study.
}
\examples{
get_imputed_data(z,list_get_obs, list_get_complete, methods_list, data_conditions, save_it = FALSE)
}
